---
title: "lab9_code"
format: html
editor: visual
---

## Lab 9: Generative Art

### Author: Rebecca Ioffe

```{r}

#| label: libraries

library(ggplot2)
library(tidyverse)
library(ggthemes)
library(ambient)
```

## Art Piece 1

#### Ordinary Plotting functions on data

Description of code choices:

Description of code choices: I chose to create a segment plot of the iris data set in base r. The color palate was chosen for the different species of iris: corresponding to the "shade" argument. The variables sepal length, sepal width, petal length, and petal width were included in the plot as varying arguments. I played around with the width of the segments - choosing the variable petal width as the length of each segment. adding an argument to I added yellow points, formatted for visual appeal with transparency, color, and shape, at the end of each segment in the plot. Then I formatted the background, added a description, and created a title and caption for the plot. 

```{r}
#clean dataset for segment plotting

iris <- iris %>%
  mutate(
    x0 = Sepal.Length,
    y0 = Sepal.Width,
    x1 = Petal.Length,
    y1 = Petal.Width,
    shade = Species,
    size = Petal.Width
  )

# Create custom color palate for species color segments

custom_colors <- c("#FF69B4", "#FF1493", "#DB7093")

# Create the segment plot
ggplot(iris, aes(
  x = x0,
  y = y0,
  xend = x1,
  yend = y1,
  color = shade,
  size = size
)) +
  geom_segment(show.legend = FALSE) +
  geom_point(aes(x = x1, y = y1), size = 3, shape = 18, color = "yellow", alpha = 0.7) +  
  # Add diamond-shaped, yellow, transparent points
  coord_polar() +
  scale_y_continuous(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) + 
  scale_color_manual(values = custom_colors) + 
  theme_void() + 
  theme(plot.caption = element_text(hjust = 0)) +
  theme(
    plot.background = element_rect(fill = "black"),
    panel.background = element_rect(fill = "black"),
    plot.title = element_text(color = "white", hjust = 0.5),
    plot.subtitle = element_text(color = "white", hjust = 0.5),
    plot.caption = element_text(color = "white", hjust = 0.5)
  ) +
  labs(
    title = "Flower Wave",
    caption = "Polar Plot of Iris Dataset with Segments"
  )



```

Description:

The wave of bright colors, each representing a species of iris contrasts the dark background. Overlaid like fireflies are the end points of each segment: culminating at the edge of the wave. 


## Art Piece 2

#### Purely generative art piece

Description of code choices: 

The sample canva function uses the ggthemes package to randomly generate color palates for the art pieces depending on the seed number inputted by the user. I used this function from the learning to start out exploring with generative art. The link to the function source is provided below. 

I created a grid of 1000 by 1000 data points by randomly generating two sequences of numbers from 1 to 10 with length 1000. Then, the long_grid function creates an x-y grid of these points based on this generation. This grid will be "canvas" that I will then use dplyr on to plot the art piece. 

Then I added different types of noise to the data (grid) by using the gen_perlin, gen_waves, and gen_spheres noise generators from the ambient package. I used a frequency of 0.9 for the perlin noise for a lower frequency and a larger perlin shape. I used a frequency of 5 for gen_waves because it created wave patterns in the art with more frequent waves. Larger frequencies resulted in more, however smaller, wave patterns. Then I generated spheres with a frequency of 25 which resulted in many, smaller spheres and normalized this value with the normalize() function. This made sure that the values in gen_spheres are contained between 0 and 1. Then I used the paint object to combine the different noise patterns by the conditional values of the gate spheres. I plotted a raster plot with a custom color palate, generated from the sample_canva() function with a seed of 54, and formatted the axes, scale, and title

Link to function source: 

https://art-from-code.netlify.app/day-1/session-2/#why-dplyr-is-a-girls-best-friend
Link to ambient documentation: 

https://cran.r-project.org/web/packages/ambient/ambient.pdf

```{r}

sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}
```


```{r}
grid <- long_grid(seq(1, 10, length.out = 1000), seq(1, 10, length.out = 1000))


grid  %>%
  mutate(
    noise = gen_perlin(x,y, frequency = 0.9), 
    ripple = gen_waves(x,y, frequency = 5), 
    gate = gen_spheres(x,y, frequency = 25) %>% normalize(), 
    paint = noise + (1 + ripple) * (gate >= 0.1 & gate < 0.5)
  ) %>%
    ggplot(aes(x, y, fill = paint)) + 
    geom_raster(show.legend = FALSE) +
    theme_void() +
    coord_equal() +
    scale_x_continuous(expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0)) +
    scale_fill_gradientn(colours = sample_canva(seed = 54)) +
labs(
    title = "Functional Anatomy",
  )


```

Description: 

Inspired by the human body: red blood cells and veins flow underneath the surface of the skin. The concentric spheres represent the cyclical nature of human life with oblong ripples representing cells. The bright red and blue color palate pay tribute to the functions of the human body. 



